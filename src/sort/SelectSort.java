package sort;

// +----------------------------------------------------------------------
// | ProjectName: algorithm_study_record
// +----------------------------------------------------------------------
// | Date: 2019/3/5
// +----------------------------------------------------------------------
// | Time: 16:32
// +----------------------------------------------------------------------
// +----------------------------------------------------------------------
public class SelectSort extends AbstractSort {

    /**
     * 选择排序
     *
     * 在整个集合里面先找最小的元素,放到首位,然后再剩下的里面继续找最小的元素放在前面.依次类推
     *
     * 特点:
     * (1)与初始数组无关:即不管初始数组的有序程度如何,排序时间是一样的
     * (2)数据移动最少: 移动次数跟数组长度是线性关系
     *
     * @param  c 实现了Comparable接口的集合
     */
    @Override
    public void sort(Comparable[] c) {


        int len = c.length;

        for (int i = 0; i < len; i++) {

            int min = i;

            for (int j = i + 1; j < len; j++) {//查询最小项

                if (c[min].compareTo(c[j]) > 0){ //(n-1)+(n-2)+...+1 = n^2 / 2 次比较
                    min = j;
                }
            }

            //跟最小的交换位置
            this.exchange(c,i,min);  //最多n-1次交换
        }

    }
}
